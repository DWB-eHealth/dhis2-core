
<h3>$i18n.getString( "update_program_notification" )</h3>
<h5>$encoder.htmlEncode( $template.displayName )</h5>

<div class="inputForm">
    <input type="hidden" id="templateUid" value="$template.uid">
    <input type="hidden" id="programId" value="$program.id">
    <input type="hidden" id="programUid" value="$program.Uid">
    <input type="hidden" id="isUpdate" value="true">

    <table>
        <thead>
        <tr>
            <th colspan="2" style="width: 590px;">$i18n.getString( "configure_program_notification" )</th><!-- TODO What to name this? -->
        </tr>
        </thead>
        <tbody>
        <tr>
            <td>
                <label for="name">$i18n.getString( "name" ) <em title="$i18n.getString( "required" )" class="required">*</em></label>
            </td>
            <td>
                <input type="text" id="name" name="name" value="$!template.name" />
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <label for="notificationTrigger">$i18n.getString( "trigger_by" )</label>
            </td>
            <td>
                #set( $trigger = $template.notificationTrigger.name() )
                <select type="text" id="notificationTrigger" name="notificationTrigger">
                    <option value="ENROLLMENT" #if ( $trigger == "ENROLLMENT" ) selected #end>$i18n.getString( "program_enrollment" )</option>
                    <option value="SCHEDULED_DAYS_INCIDENT_DATE" #if ( $trigger == "SCHEDULED_DAYS_INCIDENT_DATE" ) selected #end>$i18n.getString( "days_scheduled_incident_date" )</option>
                    <option value="SCHEDULED_DAYS_ENROLLMENT_DATE" #if ( $trigger == "SCHEDULED_DAYS_ENROLLMENT_DATE" ) selected #end>$i18n.getString( "days_scheduled_enrollment_date" )</option>
                    <option value="COMPLETION" #if ( $trigger == "COMPLETION" ) selected #end>$i18n.getString( "program_completion" )</option>
                </select>
            </td>
        </tr>
        <tr>
            <td>
                <label for="relativeScheduledDays">$i18n.getString( "send_notification" )</label>
            </td>
            <td>
                #set( $days = $template.relativeScheduledDays )
                <input type="number" min="0" max="300" id="days" value="#absValue( $days )" style="width:60px;">
                $i18n.getString( "days" )
                <select id="daysModifier" name="daysModifier" style="width:100px;">
                    <option value="-1" #if ( $days <= 0 ) selected #end>$i18n.getString( "before") </option>
                    <option value="1" #if ( $days > 0 ) selected #end>$i18n.getString( "after" )</option>
                </select>
                $i18n.getString( "scheduled_date" )
                <input type="hidden" id="relativeScheduledDays" />
            </td>
        </tr>
        <tr>
            <td>
                <label for="notificationRecipient">$i18n.getString( "recipients" )</label>
            </td>
            <td>
                #set( $rcpt = $template.notificationRecipient.name() )
                <select type="text" id="notificationRecipient" name="notificationRecipient">
                    <option value="TRACKED_ENTITY_INSTANCE" #if ( $rcpt == "TRACKED_ENTITY_INSTANCE" ) selected #end>$i18n.getString( "tracked_entity_instance" )</option>
                    <option value="ORGANISATION_UNIT_CONTACT" #if ( $rcpt == "ORGANISATION_UNIT_CONTACT" ) selected #end>$i18n.getString( "orgunit_contact" )</option>
                    <option value="USERS_AT_ORGANISATION_UNIT" #if ( $rcpt == "USERS_AT_ORGANISATION_UNIT" ) selected #end>$i18n.getString( "users_at_orgunit" )</option>
                    <option value="USER_GROUP" #if ( $rcpt == "USER_GROUP" ) selected #end>$i18n.getString( "user_group" )</option>
                </select>
            </td>
        </tr>
        <tr id="userGroupContainer" #if ( $rcpt != "USER_GROUP" ) style="display: none;" #end>
            <td>
                <label for="userGroup">$i18n.getString( "user_group" )</label>
            </td>
            <td>
                #set( $ug = $template.recipientUserGroup )
                <select type="text" id="userGroup" class="userGroup" disabled>
                    <option value="">[$i18n.getString("please_select")]</option>
                    #foreach( $group in $!userGroups )
                        <option value="$group.uid" #if ( $ug && $ug.uid.equals( $group.uid ) ) selected #end>$i18n.getString( $group.displayName )</option>
                    #end
                </select>
            </td>
        </tr>
        <tr>
            <td><label for="deliveryChannelsForm">$i18n.getString( "message_type" )</label></td>
            <td>
                #set( $dc = $template.deliveryChannels )
                <form id="deliveryChannelsForm">
                    <label for="sms_cb">$i18n.getString( "sms" )</label>
                    <input type="checkbox" #setIfEnumCollectionContains( "SMS" $dc "checked" ) id="sms_cb" name="deliveryChannels[]" value="SMS">

                    <label for="email_cb">$i18n.getString( "email" )</label>
                    <input type="checkbox" #setIfEnumCollectionContains( "EMAIL" $dc "checked" ) id="email_cb" name="deliveryChannels[]" value="EMAIL">
                </form>
            </td>
        </tr>
        <tr>
            <td>$i18n.getString( "params" )</td>
            <td>
                <select multiple size="4" id="params">
                    <option value="V{program_name}">$i18n.getString( "program_name" )</option>
                    <option value="V{org_unit_name}">$i18n.getString( "org_unit_name" )</option>
                    <option value="V{current_date}">$i18n.getString( "current_date" )</option>
                    #foreach( $attr in $attributes )
                        <option value="A{$attr.uid}">$attr.displayName</option>
                    #end
                </select>
            </td>
        </tr>
        <tr>
            <td>
                <label for="subjectTemplate">$i18n.getString( "subject_template" )</label>
            </td>
            <td>
                <textarea id="subjectTemplate" name="subjectTemplate" style="height:2em;">$!template.subjectTemplate</textarea>
            </td>
        </tr>
        <tr>
            <td>
                <label for="messageTemplate">$i18n.getString( "message_template" )</label>
            </td>
            <td>
                <textarea id="messageTemplate" maxlength="" name="messageTemplate">$!template.messageTemplate</textarea>
            </td>
        </tr>
        </tbody>
        <tbody>
        <tr>
            <td></td>
            <td>
                <button type="button" id="save" style="width: 10em;">$i18n.getString( 'add' )</button>
                <button type="button" id="cancel" style="width: 10em;">$i18n.getString( 'cancel' )</button>
            </td>
        </tr>
        </tbody>
    </table>
</div>

<script>
    ( function ( $ ) {
        var params = $( '#params' );
        var focusedTextArea = $( '#subjectTemplate' );
        var recipientSelector = $( '#notificationRecipient' );
        var userGroup = $( '#userGroup' );
        var userGroupContainer = $( '#userGroupContainer' );
        var subjectTemplateTextArea = $( '#subjectTemplate' );
        var messageTemplateTextArea = $( '#messageTemplate' );
        var saveButton = $( '#save' );
        var cancelButton = $( '#cancel' );
        var programId = $( '#programId' ).value;
        var templateUid = $( '#templateUid' ).value;

        // Event handlers

        subjectTemplateTextArea.onfocus = function() {
            focusedTextArea = subjectTemplateTextArea;
        };

        messageTemplateTextArea.onfocus = function() {
            focusedTextArea = messageTemplateTextArea;
        };

        // Click handlers

        recipientSelector.onchange = function( e ) {
            if ( recipientSelector.value === 'USER_GROUP' ) {
                userGroupContainer.style.display = 'table-row';
                userGroup.disabled = false;
            } else {
                userGroupContainer.style.display = 'none';
                userGroup.value = "";
                userGroup.disabled = true;
            }
        };

        params.ondblclick = function() {
            insertTextCommon( focusedTextArea.id, params.value );
        };

        saveButton.onclick = function() {
            update();
        };

        cancelButton.onclick = function() {
            window.location.href = 'programNotification.action?id=' + programId;
        };

        // Internal

        function getSelectedDeliveryChannels() {
            return Array.prototype.slice.call(
                document.forms[ 'deliveryChannelsForm' ].elements[ 'deliveryChannels[]' ] )
                .filter( function( cb ) { return cb.checked; } )
                .map( function( cb ) { return cb.value; } );
        };

        function getUserGroup() {
            var uid = $( '#userGroup' ).value ||Â undefined;
            return ( uid === undefined ) ? undefined : { 'id' : uid };
        };

        function getScheduledDays() {
            return ( $( '#days' ).value || 0 ) * ( $( '#daysModifier' ).value );
        };

        function formAsJson() {
            return {
                name : $( '#name' ).value || '',
                notificationTrigger : $( '#notificationTrigger' ).value,
                relativeScheduledDays : getScheduledDays(),
                notificationRecipient : $( '#notificationRecipient' ).value,
                recipientUserGroup : getUserGroup(),
                deliveryChannels : getSelectedDeliveryChannels(),
                subjectTemplate : $( '#subjectTemplate' ).value,
                messageTemplate : $( '#messageTemplate' ).value
            };
        };

        function update() {
            var jsonData = formAsJson();

            jQuery.ajax( {
                url : '../api/programNotificationTemplates/' + templateUid,
                dataType : 'json',
                data : JSON.stringify( jsonData ),
                contentType : 'application/json',
                type : 'PUT'
            } ).done( function( result ) {
                    window.location.href = 'programNotification.action?id=' + programId;
            } ).fail( function( jqXhr, textStatus, error ) {
                    var json = jQuery.parseJSON( jqXhr.responseText );
                    var errorMessage = json.response.errorReports[0].message;

                    setHeaderDelayMessage( errorMessage || ( textStatus + ': ' + error ) );
            } );
        };

    } )( document.querySelector.bind( document ) );
</script>